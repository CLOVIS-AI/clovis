variables:
  TEST_DB_IMAGE: "$CI_REGISTRY_IMAGE/mariadb-client:$CI_PIPELINE_IID"
  RELEASE_DB_IMAGE: "$CI_REGISTRY_IMAGE/mariadb-client:latest"
  OPENJDK_IMAGE: "openjdk:11"
  CASSANDRA_IMAGE: "cassandra:4.0"

  clovis_jwt_secret: "secret"

.gradle:
  script: &prepare_gradle
    - export GRADLE_USER_HOME=$(pwd)/.gradle
  cache:
    paths:
      - .gradle/wrapper
      - .gradle/caches

.database:
  services:
    - $CASSANDRA_IMAGE
  script: &prepare_database
    - cp core.database/src/main/resources/application.gitlab.conf core.database/src/main/resources/application.conf

core test-jvm:
  image: $OPENJDK_IMAGE
  extends: [ .gradle ]
  needs: [ ]
  before_script:
    - *prepare_gradle
  script:
    - ./gradlew core:jvmTest
  artifacts:
    reports:
      junit: core/build/test-results/**/TEST-*.xml
    when: always
    paths:
      - core/build/reports/tests/

core.primitives test-jvm:
  image: $OPENJDK_IMAGE
  extends: [ .gradle ]
  needs: [ ]
  before_script:
    - *prepare_gradle
  script:
    - ./gradlew core.primitives:jvmTest
  artifacts:
    reports:
      junit: core.primitives/build/test-results/**/TEST-*.xml
    when: always
    paths:
      - core.primitives/build/reports/tests/

core.database test:
  image: $OPENJDK_IMAGE
  extends: [ .gradle, .database ]
  needs: [ ]
  before_script:
    - *prepare_gradle
    - *prepare_database
  script:
    - ./gradlew core.database:test
  artifacts:
    reports:
      junit: core.database/build/test-results/**/TEST-*.xml
    when: always
    paths:
      - core.database/build/reports/tests/

money.database test:
  image: $OPENJDK_IMAGE
  extends: [ .gradle, .database ]
  needs: [ ]
  before_script:
    - *prepare_gradle
    - *prepare_database
  script:
    - ./gradlew money.database:test
  artifacts:
    reports:
      junit: money.database/build/test-results/**/TEST-*.xml
    when: always
    paths:
      - money.database/build/reports/tests/

backend.server test:
  image: $OPENJDK_IMAGE
  extends: [ .gradle, .database ]
  needs: [ ]
  before_script:
    - *prepare_gradle
    - *prepare_database
  script:
    - ./gradlew backend.server:test
  artifacts:
    reports:
      junit: backend.server/build/test-results/**/TEST-*.xml
    when: always
    paths:
      - backend.server/build/reports/tests/

dokka:
  image: $OPENJDK_IMAGE
  extends: [ .gradle ]
  needs: [ ]
  before_script:
    - *prepare_gradle
  script:
    # 'assemble' is needed because of https://github.com/Kotlin/dokka/issues/1455
    - "./gradlew assemble dokkaHtmlMultiModule"
  artifacts:
    paths:
      - build/dokka/htmlMultiModule/

telegram:
  stage: deploy
  image: registry.gitlab.com/clovis-ai/dotfiles:latest
  needs: [ ]
  script:
    - git changelog --format telegram-html --incoming >changelog
    - announce-telegram changelog "$CHAT_IDS"
  only:
    - master

pages:
  image: alpine:latest
  stage: deploy
  dependencies: [ dokka ]
  needs: [ dokka ]
  script:
    - mkdir -p public/documentation
    - mv build/dokka/htmlMultiModule/* public/documentation/
  artifacts:
    paths:
      - public
  only:
    - master
